#!/usr/bin/env python
# coding: utf-8

# # 판다스(Pandas)

# 

# ## 1. pandas 불러오기

# ```import 라이브러리``` 명령을 통해 라이브러리를 불러오며,
# 뒤에 ```as 줄임말``` 이라는 명령을 통해 ```줄임말``` 로 간단하게 이름을 변경하여 사용가능

# In[5]:


import pandas as pd


# ## 2. 데이터 불러오기

# pd.read_excel('```파일경로``` + 파일명.xlsx')
# pd.read_csx('```파일경로``` + 파일명.csv')
# 
# ```파일경로```는 절대경로와 상대경로 두 가지 방법 있음
#  
#  * 절대경로 : "c:/-----" c:부터 지정하는법
#  * 상대경로 : "./폴더---" 현재 위치 (주피터 노트북 파일위치)를 기준으로 지정하는 법

# In[6]:


fpath = './data/exam.xlsx'
raw = pd.read_excel(fpath)


# In[20]:


# head() 이용 상단의 데이터 살펴볼 수 있음
raw.head(2)  # ()안 숫자 보고싶은 데이더 갯수 default는 5 


# In[18]:


raw.tail()


# In[22]:


# info() 이용 인덱스, 컬럼의 데이터 개수/종류 확인가능
raw.info()


# In[23]:


# describe() 이용, 수치형 데이터(int, float)가 들어있는 컬럼 기초통계량(개수, 평균, 표준편차, 최솟값, 25%, 50%,75%, 최댓값)
raw.describe()


# * 데이터를 불러들이고 head(), info(), describe() 통해 데이터 살펴보는것 추천

# In[24]:


raw


# Q) 번호 컬럼에 들어있는 1, 2, 3 을 인덱스로 활용하고 싶을때
# * set_index()

# In[13]:


# set_index() 명령어 이용하여 컬럼 -> 인덱스 전환 가능
raw = raw.set_index('번호')


# In[14]:


raw


# In[ ]:





# Q) 엑셀 파일을 읽어올때 미리 인덱스 지정할 수 있을까?
# 
# * pd.read_excel('파일명', index_col = ```컬럼정보```)
# * ```컬럼정보```에는 컬럼번호(0부터시작) or 컬럼명 지정할 수 있음

# In[11]:


fpath = './data/exam.xlsx'
pd.read_excel(fpath, index_col = '번호')


# # 3. 데이터 선택하기

# ### 3.1 개별 데이터 선택하기

# df.iloc[로우, 컬럼] : 인덱스 번호로 선택하기 <br>
# df.loc[로우, 컬럼] : 이름으로 선택하기

# In[15]:


raw


# In[16]:


# iloc[행번호, 열번호] -> 행, 열 데이터 선택 가능
# 1, 2

raw.iloc[1, 2]


# In[17]:


# loc[행번호, 열번호] -> 행, 열 데이터 선택가능 행/열 이름으로 선택
# '1번', '수학'

raw.loc['1번', '수학']


# In[18]:


raw


# In[20]:


# 실습) 1번 국어 점수 선택하기

print(raw.loc['1번', '국어'])
print(raw.iloc[0,0])


# ## 복수의 셀을 선택할 경우
# * df.loc[인덱스명, 컬럼명]
# * df.iloc[인덱스번호, 컬럼번호]<br><br>
# ```인덱스/컬럼 정보```에 ```[조건1, 조건2, ..., 조건n]``` 리스트 형태로 여러개 입력 or ```시작:종료``` 형태로 번위지정 가능

# In[21]:


# 1번학생 국어/영어 점수 조회
# '1번', '국어', '영어'

raw.loc['1번', ['국어', '영어']]


# In[24]:


# 1,2번학생 수학점수 조회
# '1번', '2번', '수학'

raw.iloc[[0,1], 2]


# In[26]:


# 리스트 슬라이싱기호 ':' 이용해 특정 범위 지정 가능
# 1번학생 '영어' 부터 끝까지 점수 조회

raw.iloc[0, 1:]


# ### 3.2 컬럼 선택하기

# 하나의 컬럼을 전체 선택하는 data.loc[:,```컬럼명```] 은 아래와 같이 줄여서 사용가능
# 
# * data.컬럼명
# * data[```'컬럼명'```]

# In[27]:


# loc[인덱스, 컬럼] 을 이용하여 모든 학생들의 수학 점수를 선택
# 수학 컬럼 선택

raw.loc[:,'수학']


# In[28]:


# 데이터프레임[컬럼명] 으로 하나의 컬럼을 지정가능
# 수학컬럼 선택

raw['수학']


# 여러개의 컬럼 선택할 경우, 원하는 컬럼 순서대로 리스트로 만들어서 지정<br>
# data[['컬럼명1', '컬럼명2', ..., '컬럼명n']]

# In[29]:


# 수학과 영어 컬럼 선택

raw[['수학', '영어']]


# In[30]:


# 컬럼순서 내가 원하는대로 변경하여 선택하는것도 가능
# '수학', '영어', '국어'

raw[['수학', '영어', '국어']]


# ### 3.3. 특정 조건 데이터 선택하기

# df[```condition```] ---> True 인 데이터만 출렴됨
# * ```condition```: True/False 로 구성된 리스트 / 시리즈

# In[32]:


raw


# In[35]:


# 특정 조건 만족 여부 판단하는 비교 연산자 < > = 사용가능
# 수학 80보다 작은경우

cond = raw['수학']  < 80
cond


# In[37]:


# True / False 로 된 시리즈나 리스트를 이용해, True에 해당하는 행만 선택가능
# 수학컬럼이 80보다 작다는 조건에 True만 출력

raw[cond]


# In[39]:


# 비교연산자 이용하지 않고 직접 True/False 값 가진 리스트 만들어서 조건으로 이용해도 됨
# 주의할 점 : 더에터프레임 행 개수와 리스트 원소 개수가 동일해야함

cond = [True, False, True]
raw[cond]


# ## ✖︎여러개의 조건 만들기
# 여러 개의 조건으로 선택할 수도 있음, 조건을 모두 만족해야 하는 경우(&), 하나라도 만족하면 되는 경우(|)
# <br>
# * ```&```(shift + 7) ===> "and", 모두 만족하면 True
#     * True ```&``` True = True
#     * Ture ```&``` False = False
#     * False ```&``` Fasle = False
# <br>
# <br>
# * ```|```(shift + 역슬러시) ===> "or", 하나라도 만족하면 True
#     * True ```|``` True = True
#     * False ```|``` True = True
#     * False ```|``` False = False

# In[41]:


# 영어나 수학 둘 중 하나라도 80 넘는 경우
cond3 = (raw['영어'] > 80)
cond4 = (raw['수학'] > 80)

cond = cond3 | cond4
raw[cond]


# In[42]:


# 영어, 수학 모두 80넘는 경우
cond3 = (raw['영어'] > 80)
cond4 = (raw['수학'] > 80)

cond = cond3&cond4
raw[cond]


# In[ ]:


# 영어 70이상, 수학 70이상 90미만

cond = (raw['영어'] >= 70)&(raw['수학'] >= 70)

